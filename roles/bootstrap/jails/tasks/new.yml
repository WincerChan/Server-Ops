- name: Check if jail is already created
  shell: "qjail list {{ jail_name }}"
  register: jail_check

- name: Update IP Address
  set_fact:
    jail_ipv4: "{{ (jail_ipv4 + ipv4_router_prefix) | ansible.netcommon.ipaddr('next_usable') }}"
    jail_ipv6: "{{ (jail_ipv6 + ipv6_router_prefix) | ansible.netcommon.ipaddr('next_usable') }}"

- name:
  when: "'Error' in jail_check.stdout"
  block:
    - name: Create Qjail
      shell: qjail create -4 {{ ipv4_interface }}|{{ jail_ipv4 }} -6 {{ ipv6_interface }}|{{ jail_ipv6 }} {{ jail_name }}

    - name: Enable Raw Socket Rustc Jail
      shell: "qjail config -k {{ jail_name }}"
    
    - name: Update IPv4 config
      lineinfile:
        path: "/usr/local/etc/qjail.config/{{ jail_name }}"
        line: "ip4.addr            = {{ ipv4_interface }}|{{ jail_ipv4 }};"
        regexp: "^ip4.addr"
    - name: Update IPv6 config
      lineinfile:
        path: "/usr/local/etc/qjail.config/{{ jail_name }}"
        line: "ip6.addr            = {{ ipv6_interface }}|{{ jail_ipv6 }};"
        regexp: "^ip6.addr"



- name: Start Jails
  shell: "qjail start {{ jail_name }}"

- name: Restart pf
  service:
    name: pf
    state: restarted

# - name: Disable Cron
#   when: "jail_name not in needs_cron"
#   community.general.sysrc:
#     name: cron_enable
#     value: "NO"
#     jail: "{{ jail_name }}"

# - name: Diable Cron Flags
#   when: "jail_name not in needs_cron"
#   community.general.sysrc:
#     name: cron_flags
#     state: absent
#     jail: "{{ jail_name }}"